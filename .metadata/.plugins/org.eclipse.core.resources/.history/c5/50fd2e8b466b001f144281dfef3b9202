package com.nimap.task.NimapTask.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.nimap.task.NimapTask.entity.Product;

@Repository
public class ProductDao {

	@Autowired
	SessionFactory factory;
	
	public String addProduct(Product product) {
		Session session = null;
		Transaction transaction = null;
		String msg = null;
		
		try {
			session = factory.openSession();
			transaction = session.beginTransaction();
			session.persist(product);
			transaction.commit();
			msg = "Product Added Successfully......";
		} catch (Exception e) {
			// TODO: handle exception
			if (transaction!=null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}finally {
			if (session!=null) {
				session.close();
			}
		}
		return msg;
	}

	public List<Product> getAllProduct() {
		Session session = null;
		Transaction transaction = null;
		List<Product> list = null;
		
		try {
			session = factory.openSession();
			transaction = session.beginTransaction();
			
			String hqlQuery = "from Product";
			Query<Product> query = session.createQuery(hqlQuery, Product.class);
			list = query.list();
			transaction.commit();
		} catch (Exception e) {
			// TODO: handle exception
			if (transaction!=null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}finally {
			if (session!=null) {
				session.close();
			}
		}
		return list;
	}

	public Product getParticularProduct(int id) {
		Session session = null;
		Transaction transaction = null;
		Product product = null;
		
		try {
			session = factory.openSession();
			transaction = session.beginTransaction();
			product = session.get(Product.class, id);
			transaction.commit();
		} catch (Exception e) {
			// TODO: handle exception
			if (transaction!=null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}finally {
			if (session!=null) {
				session.close();
			}
		}
		return product;
	}

	public String updateProduct(Product product, int id) {
		Session session = null;
		Transaction transaction = null;
		String msg = null;
		
		try {
			session = factory.openSession();
			transaction = session.beginTransaction();
			Product product2 = session.get(Product.class, id);
			employee2.setName(employee.getName());
			employee2.setMob_no(employee.getMob_no());
			employee2.setEmail_id(employee.getEmail_id());
			employee2.setDept(employee.getDept());
			employee2.setSalary(employee2.getSalary());
			employee2.setStatus(employee.getStatus());
			employee.setCreatedBy(employee.getCreatedBy());
			employee2.setCreateDate(employee.getCreateDate());
			employee2.setUpdatedBy(employee.getUpdatedBy());
			employee2.setUpdatedDate(employee.getUpdatedDate());
			session.merge(employee2);
			transaction.commit();
			msg = "Employee Updated Successfully";
		} catch (Exception e) {
			// TODO: handle exception
			if (transaction!=null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}finally {
			if (session!=null) {
				session.close();
			}
		}
		return msg;
	}

}
